{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Anoop P N/Desktop/Winter2022/IR and WS/Project/twitter-search/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.keys.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'search-app',\n  data: function data() {\n    return {\n      msg: 'Twitter Data Search Engine',\n      query: '',\n      queryType: 'luceneIndex',\n      lucene: 'luceneIndex',\n      spark: 'sparkIndex',\n      result: null,\n      tableView: false,\n      loading: false\n    };\n  },\n  methods: {\n    executeQuery: function executeQuery() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(_this.query.length === 0)) {\n                  _context.next = 4;\n                  break;\n                }\n\n                alert('Please input search query');\n                _context.next = 21;\n                break;\n\n              case 4:\n                _context.prev = 4;\n                // const headers = { \"Content-Type\": \"application/json\" }\n                _this.tableView = false;\n                _this.loading = true;\n                _context.next = 9;\n                return _this.$axios.get('http://localhost:8083/query?searchQuery=' + _this.query);\n\n              case 9:\n                response = _context.sent;\n                _this.result = response.data;\n                console.log(_this.result);\n\n                if (Object.keys(_this.result).length === 0) {\n                  alert('Sorry! No results found..');\n                } else {\n                  _this.tableView = true;\n                }\n\n                _context.next = 18;\n                break;\n\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](4);\n                console.log(_context.t0);\n\n              case 18:\n                _context.prev = 18;\n                _this.loading = false;\n                return _context.finish(18);\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[4, 15, 18, 21]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACAA,oBADA;AAEAC,MAFA,kBAEA;AACA;AACAC,uCADA;AAEAC,eAFA;AAGAC,8BAHA;AAIAC,2BAJA;AAKAC,yBALA;AAMAC,kBANA;AAOAC,sBAPA;AAQAC;AARA;AAUA,GAbA;AAcAC;AACAC,gBADA,0BACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,wBADA;AAAA;AAAA;AAAA;;AAEAC;AAFA;AAAA;;AAAA;AAAA;AAMA;AACA;AACA;AARA;AAAA,uBASA,0EATA;;AAAA;AASAC,wBATA;AAUA;AACAC;;AACA;AACAF;AACA,iBAFA,MAEA;AACA;AACA;;AAhBA;AAAA;;AAAA;AAAA;AAAA;AAkBAE;;AAlBA;AAAA;AAoBA;AApBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA;AAxBA;AAdA","names":["name","data","msg","query","queryType","lucene","spark","result","tableView","loading","methods","executeQuery","alert","response","console"],"sourceRoot":"src/components","sources":["Search.vue"],"sourcesContent":["<template>\n<!-- <v-main> -->\n  <v-container class=\"back\" fill-height fluid align=\"center\">\n    <v-row align=\"center\" justify=\"center\">\n      <div class=\"text-center\">\n        <!-- <h1>{{ msg }}</h1> -->\n        <input type=\"text\" size=\"100\" v-model=\"query\" placeholder=\"Enter your search query here.\"/>\n        <br><br>\n        <div class=\"center\">\n          <input type=\"radio\" v-model=\"queryType\" v-bind:value=\"lucene\"> Lucene Index\n          <input type=\"radio\" v-model=\"queryType\" v-bind:value=\"spark\"> Spark Index\n        </div><br><br>\n        <div class=\"center\">\n            <button @click=\"executeQuery\" size=\"50\">Search</button>\n            <br><br>\n        </div>\n        <v-progress-circular\n        :size=\"50\"\n        color=\"amber\"\n        indeterminate\n        v-if=\"this.loading\"\n        ></v-progress-circular>\n        <v-simple-table v-if=\"this.tableView\" align=\"center\">\n          <template v-slot:default>\n          <thead>\n            <tr>\n              <th> Rank</th>\n              <th> Rank Score</th>\n              <th> Result</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"data in result\" :key=\"data.rank\" >\n                      <td> {{ data.rank }} </td>\n                      <td> {{ data.score }} </td>\n                      <td> {{ data.text }} </td>\n                    </tr>\n          </tbody>\n           </template>\n        </v-simple-table>\n  </div>\n  </v-row>\n  </v-container>\n<!-- </v-main> -->\n</template>\n\n<script>\nexport default {\n  name: 'search-app',\n  data () {\n    return {\n      msg: 'Twitter Data Search Engine',\n      query: '',\n      queryType: 'luceneIndex',\n      lucene: 'luceneIndex',\n      spark: 'sparkIndex',\n      result: null,\n      tableView: false,\n      loading: false\n    }\n  },\n  methods: {\n    async executeQuery () {\n      if (this.query.length === 0) {\n        alert('Please input search query')\n      } else {\n        // alert('Searching for ' + this.query + ' with Indexing Type: ' + this.queryType)\n        try {\n          // const headers = { \"Content-Type\": \"application/json\" }\n          this.tableView = false\n          this.loading = true\n          const response = await this.$axios.get('http://localhost:8083/query?searchQuery=' + this.query)\n          this.result = response.data\n          console.log(this.result)\n          if (Object.keys(this.result).length === 0) {\n            alert('Sorry! No results found..')\n          } else {\n            this.tableView = true\n          }\n        } catch (error) {\n          console.log(error)\n        } finally {\n          this.loading = false;\n        }\n      }\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh1, h2 {\n  font-weight: normal;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n.center {\n  text-align: center;\n}\n.tr, td {\n  text-align: left;\n}\ntable, th, td {\n  border: 1px solid;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}