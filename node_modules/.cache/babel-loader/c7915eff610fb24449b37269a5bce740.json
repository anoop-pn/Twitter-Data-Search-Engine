{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'search-app',\n\n  data() {\n    return {\n      // Declaring variables here\n      query: '',\n      queryType: 'luceneIndex',\n      lucene: 'luceneIndex',\n      hadoop: 'hadoopIndex',\n      result: null,\n      tableView: false,\n      loading: false,\n      dialog: false,\n      alert: false,\n      alertMessage: ''\n    };\n  },\n\n  methods: {\n    async executeQuery() {\n      this.tableView = false;\n      this.result = null;\n\n      if (this.query.length === 0) {\n        this.alert = true;\n        this.alertMessage = \"Please input a search query.\";\n      } else {\n        try {\n          this.loading = true;\n          const response = await this.$axios.get('http://localhost:8083/' + this.queryType + '?searchQuery=' + this.query);\n          this.result = response.data;\n          console.log(this.result);\n\n          if (Object.keys(this.result).length === 0) {\n            this.loading = false;\n            this.alert = true;\n            this.alertMessage = \"Sorry! No results found..\";\n          } else {\n            this.tableView = true;\n            this.dialog = true;\n          }\n        } catch (error) {\n          this.alert = true;\n          this.alertMessage = \"Sorry! Something went wrong in the backend..\";\n          console.log(error);\n        } finally {\n          this.loading = false;\n          this.query = '';\n        }\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyFA;AACAA,oBADA;;AAEAC;AACA;AACA;AACAC,eAFA;AAGAC,8BAHA;AAIAC,2BAJA;AAKAC,2BALA;AAMAC,kBANA;AAOAC,sBAPA;AAQAC,oBARA;AASAC,mBATA;AAUAC,kBAVA;AAWAC;AAXA;AAaA,GAhBA;;AAiBAC;AACA;AACA;AACA;;AACA;AACA;AACA;AACA,OAHA,MAGA;AACA;AACA;AACA;AACA;AACAC;;AACA;AACA;AACA;AACA;AACA,WAJA,MAIA;AACA;AACA;AACA;AACA,SAbA,CAaA;AACA;AACA;AACAA;AACA,SAjBA,SAiBA;AACA;AACA;AACA;AACA;AACA;;AA9BA;AAjBA","names":["name","data","query","queryType","lucene","hadoop","result","tableView","loading","dialog","alert","alertMessage","methods","console"],"sourceRoot":"src/components","sources":["Search.vue"],"sourcesContent":["<template>\n  <v-container class=\"back\" fluid align=\"center\">\n    <v-row align=\"center\" justify=\"center\">\n      <div class=\"text-center\">\n        <img src=\"../assets/twitter.png\">\n        <v-text-field\n        label=\"Enter your search query here\"\n        v-model=\"query\"\n        @keyup.enter=\"executeQuery\"\n        size=\"50\"\n        ></v-text-field>\n        <v-radio-group v-model=\"queryType\">\n          <v-radio\n           label=\"Lucene Index\"\n           :value=\"lucene\"/>\n          <v-radio\n           label=\"Hadoop Index\"\n           :value=\"hadoop\"/>\n        </v-radio-group>\n        <v-btn \n        color=\"primary\"\n        elevation=\"2\"\n        @click=\"executeQuery\">\n        Search\n        </v-btn>\n        <br><br>\n        <v-progress-circular\n        :size=\"50\"\n        color=\"amber\"\n        indeterminate\n        v-if=\"this.loading\"\n        ></v-progress-circular>\n          <v-dialog\n          max-width=\"500px\"\n          v-model=\"alert\"\n          >\n            <v-card>\n            <v-card-title>{{alertMessage}}</v-card-title>\n            </v-card>\n            </v-dialog>\n            <v-dialog\n            v-model=\"dialog\"\n            fullscreen\n            hide-overlay\n            transition=\"dialog-bottom-transition\"\n            >\n              <v-card\n                elevation=\"2\"\n              >\n              <v-toolbar\n                dark\n                color=\"primary\"\n              >\n              <v-btn\n                icon\n                dark\n                @click=\"dialog = false\"\n              >\n              <v-icon>mdi-close</v-icon>\n              </v-btn>\n              <v-toolbar-title>Search Results</v-toolbar-title>\n              <v-spacer></v-spacer>\n              </v-toolbar>\n              <v-simple-table  align=\"center\">\n                <template v-slot:default>\n                <thead>\n                  <tr>\n                    <th> Rank</th>\n                    <th> Rank Score</th>\n                    <th> Tweet</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"data in result\" :key=\"data.rank\" >\n                    <td> {{ data.rank }} </td>\n                    <td> {{ data.score }} </td>\n                    <td> {{ data.text }} </td>\n                  </tr>\n                </tbody>\n                </template>\n              </v-simple-table>\n              </v-card>\n          </v-dialog>\n      </div>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nexport default {\n  name: 'search-app',\n  data () {\n    return {\n      // Declaring variables here\n      query: '',\n      queryType: 'luceneIndex',\n      lucene: 'luceneIndex',\n      hadoop: 'hadoopIndex',\n      result: null,\n      tableView: false,\n      loading: false,\n      dialog: false,\n      alert: false,\n      alertMessage: ''\n    }\n  },\n  methods: {\n    async executeQuery () {\n      this.tableView = false\n      this.result = null\n      if (this.query.length === 0) {\n        this.alert = true\n        this.alertMessage = \"Please input a search query.\"\n      } else {\n          try {\n            this.loading = true\n            const response = await this.$axios.get('http://localhost:8083/'+this.queryType+'?searchQuery=' + this.query)\n            this.result = response.data\n            console.log(this.result)\n            if (Object.keys(this.result).length === 0) {\n              this.loading = false\n              this.alert = true\n              this.alertMessage = \"Sorry! No results found..\"\n            } else {\n              this.tableView = true\n              this.dialog = true\n            }\n          } catch (error) {\n            this.alert = true\n            this.alertMessage = \"Sorry! Something went wrong in the backend..\"\n            console.log(error)\n          } finally {\n            this.loading = false;\n            this.query = ''\n          }\n       }\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.center {\n  text-align: center;\n}\n.tr, td {\n  text-align: left;\n}\ntable, td {\n  border: 1px solid;\n}\nth {\n  font-size: 1.5rem !important;\n  font-weight: bold;\n  border: 1px solid;\n}\n</style>"]},"metadata":{},"sourceType":"module"}