{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'search-app',\n\n  data() {\n    return {\n      msg: 'Twitter Data Search Engine',\n      query: '',\n      queryType: 'luceneIndex',\n      lucene: 'luceneIndex',\n      spark: 'sparkIndex',\n      result: null,\n      dialog: false\n    };\n  },\n\n  methods: {\n    async executeQuery() {\n      if (this.query.length === 0) {\n        alert('Please input search query');\n      } else {\n        // alert('Searching for ' + this.query + ' with Indexing Type: ' + this.queryType)\n        try {\n          // const headers = { \"Content-Type\": \"application/json\" }\n          const response = await this.$axios.get('http://localhost:8083/query?searchQuery=' + this.query);\n          this.result = response.data;\n          console.log(this.result);\n\n          if (Object.keys(this.result).length === 0) {\n            alert('Sorry! No results found..');\n          } else {\n            this.dialog = true;\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;AACAA,oBADA;;AAEAC;AACA;AACAC,uCADA;AAEAC,eAFA;AAGAC,8BAHA;AAIAC,2BAJA;AAKAC,yBALA;AAMAC,kBANA;AAOAC;AAPA;AASA,GAZA;;AAaAC;AACA;AACA;AACAC;AACA,OAFA,MAEA;AACA;AACA;AACA;AACA;AACA;AACAC;;AACA;AACAD;AACA,WAFA,MAEA;AACA;AACA;AACA,SAVA,CAUA;AACAC;AACA;AACA;AACA;;AApBA;AAbA","names":["name","data","msg","query","queryType","lucene","spark","result","dialog","methods","alert","console"],"sourceRoot":"src/components","sources":["Search.vue"],"sourcesContent":["<template>\n<v-main>\n  <v-container class=\"back\" fill-height fluid>\n    <v-row align=\"center\" justify=\"center\">\n      <div class=\"text-center\">\n        <h1>{{ msg }}</h1>\n        <input type=\"text\" size=\"100\" v-model=\"query\" placeholder=\"Enter your search query here.\"/>\n        <br><br>\n        <div class=\"center\">\n          <input type=\"radio\" v-model=\"queryType\" v-bind:value=\"lucene\"> Lucene Index\n          <input type=\"radio\" v-model=\"queryType\" v-bind:value=\"spark\"> Spark Index\n        </div><br><br>\n        <div class=\"center\">\n            <button @click=\"executeQuery\" size=\"50\">Search</button>\n            <br><br>\n        </div>\n        <v-simple-table v-if=\"this.dialog\" align=\"center\">\n          <template v-slot:default>\n          <thead>\n            <tr>\n              <th> Rank</th>\n              <th> Rank Score</th>\n              <th> Result</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"data in result\" :key=\"data.rank\" >\n                      <td> {{ data.rank }} </td>\n                      <td> {{ data.score }} </td>\n                      <td> {{ data.text }} </td>\n                    </tr>\n          </tbody>\n           </template>\n        </v-simple-table>\n  </div>\n  </v-row>\n  </v-container>\n</v-main>\n</template>\n\n<script>\nexport default {\n  name: 'search-app',\n  data () {\n    return {\n      msg: 'Twitter Data Search Engine',\n      query: '',\n      queryType: 'luceneIndex',\n      lucene: 'luceneIndex',\n      spark: 'sparkIndex',\n      result: null,\n      dialog: false\n    }\n  },\n  methods: {\n    async executeQuery () {\n      if (this.query.length === 0) {\n        alert('Please input search query')\n      } else {\n        // alert('Searching for ' + this.query + ' with Indexing Type: ' + this.queryType)\n        try {\n          // const headers = { \"Content-Type\": \"application/json\" }\n          const response = await this.$axios.get('http://localhost:8083/query?searchQuery=' + this.query)\n          this.result = response.data\n          console.log(this.result)\n          if (Object.keys(this.result).length === 0) {\n            alert('Sorry! No results found..')\n          } else {\n            this.dialog = true\n          }\n        } catch (error) {\n          console.log(error)\n        }\n      }\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh1, h2 {\n  font-weight: normal;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n.center {\n  text-align: center;\n}\n.tr, td {\n  text-align: left;\n}\ntable, th, td {\n  border: 1px solid;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}